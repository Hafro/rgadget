% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gadget_forward.R
\name{gadget_project_time}
\alias{gadget_project_time}
\alias{gadget_project_stocks}
\alias{gadget_project_fleets}
\alias{gadget_project_recruitment}
\alias{gadget_project_advice}
\alias{gadget_project_ref_point}
\alias{gadget_project_output}
\title{Gadget projection function}
\usage{
gadget_project_time(
  path = ".",
  num_years = 100,
  variant_dir = getwd() \%>\% stringr::str_count("/") \%>\% rep("../", .) \%>\%
    paste(collapse = "") \%>\% paste(tempdir(), sep = "")
)

gadget_project_stocks(path, imm.file, mat.file, spawn_func = "hockeystick")

gadget_project_fleets(
  path,
  pre_fleet = "comm",
  post_fix = "pre",
  fleet_type = "linearfleet",
  ...
)

gadget_project_recruitment(
  path,
  stock,
  recruitment = NULL,
  n_replicates = 100,
  params.file = "PRE/params.pre",
  method = "AR",
  ...
)

gadget_project_advice(
  path,
  params.file = "PRE/params.pre",
  harvest_rate = 0.2,
  advice_cv = 0.2,
  advice_rho = 0.6,
  pre_fleet = "comm",
  post_fix = "pre",
  n_replicates = 100
)

gadget_project_ref_point(path, ref_points, params.file = "PRE/params.pre")

gadget_project_output(
  path,
  imm.file,
  mat.file,
  pre_fleets = "comm",
  post_fix = "pre",
  output_dir = "out"
)
}
\arguments{
\item{path}{gadget model directory}

\item{num_years}{number of years}

\item{variant_dir}{location of the}

\item{imm.file}{location of the immature stock file}

\item{mat.file}{location of the mature stock file}

\item{spawn_func}{what spawn function to use (only hockeystick atm)}

\item{pre_fleet}{name of the fleet projections are based on}

\item{post_fix}{label}

\item{fleet_type}{type of gadget fleet for the projections}

\item{...}{additional arguments for the}

\item{stock}{name of immature stock}

\item{recruitment}{recruitment time series}

\item{n_replicates}{number of simulations}

\item{params.file}{name of the parameter files}

\item{method}{prediction method, built in options are 'AR', 'bootstrap' or constant}

\item{harvest_rate}{median harvest rate}

\item{advice_cv}{assessment error cv}

\item{advice_rho}{assessment error correlation}

\item{ref_points}{tibble with reference points}

\item{pre_fleets}{vector of fleets on which the projections is based}

\item{output_dir}{location of the model output}
}
\value{
gadget variant directory
}
\description{
Setup model and parameter files for forward simulations and deterministic projections.
}
\examples{
\dontrun{

fit <- gadget.fit()

res <- 
 gadget_project_time() \%>\% 
 gadget_project_stocks(imm.file = 'Modelfiles/cod.imm',mat.file = 'Modelfiles/cod.mat') \%>\% 
 gadget_project_fleets(pre_fleet = 'comm') \%>\% 
 gadget_evaluate(params.out = paste(attr(.,'variant_dir'),'params.pre',sep='/'),
                 params.in = 'WGTS/params.final') \%>\% 
 gadget_project_recruitment(stock = 'codimm', 
                            recruitment = fit$stock.recruitment \%>\% 
                              filter(stock == 'codimm',
                                     year > 1980),
                            params.file = paste(attr(.,'variant_dir'),'params.pre',sep='/')) \%>\% 
 gadget_project_ref_point(ref_points = tibble(codmat.blim = 207727665), 
                         params.file = paste(attr(.,'variant_dir'),'params.pre',sep='/')) \%>\% 
 gadget_project_advice(pre_fleet = 'comm',
                       harvest_rate = 1:100/100, 
                       params.file = paste(attr(.,'variant_dir'),'params.pre',sep='/')) \%>\% 
 gadget_project_output(imm.file = 'Modelfiles/cod.imm',mat.file = 'Modelfiles/cod.mat'
                       pre_fleet = 'comm') \%>\% 
 gadget_evaluate(params.in = paste(attr(.,'variant_dir'),'params.pre',sep='/'))  \%>\% 
 {read.printfiles(paste(attr(.,'variant_dir'),'out',sep='/'))} \%>\% 
 map(mutate, trial=cut(1:length(year),c(0,which(diff(year)<0),1e9),labels = FALSE)) \%>\% 
 set_names(c("catch.F","catch.lw",'codimm.rec','codmat.ssb')) \%>\% 
 map(left_join,tibble(trial=1:10000,harvest_rate = rep(1:100/100,100)))


yield_curve <- 
 res$catch.lw \%>\% 
 filter(year>2050) \%>\% 
 group_by(trial,harvest_rate,year) \%>\% 
 summarise(c=sum(biomass_consumed)/1e6) \%>\% 
 group_by(harvest_rate) \%>\% 
 summarise(m=median(c),u=quantile(c,0.95),l=quantile(c,0.05)) 



ssb_curve <- 
 res$codmat.ssb \%>\% 
 filter(year>2050) \%>\% 
 group_by(trial,harvest_rate,year) \%>\% 
 summarise(c=sum(number*mean_weight)/1e6) \%>\% 
 group_by(harvest_rate) \%>\% 
 summarise(m=median(c),u=quantile(c,0.95),l=quantile(c,0.05))

f.curve <- 
 res$catch.F \%>\% 
 filter(year>2050) \%>\% 
 group_by(trial,harvest_rate,year) \%>\% 
 summarise(c=median(mortality)) \%>\% 
 group_by(harvest_rate) \%>\% 
 summarise(m=median(c),u=quantile(c,0.95),l=quantile(c,0.05)) 


blim <- 
 fit$res.by.year \%>\% 
 filter(grepl('mat',stock)) \%>\% 
 summarise(b=min(total.biomass)/1e6) \%>\% 
 .$b

bpa <- 1.4*blim

hr_msy <- 
 yield_curve \%>\% filter(m==max(m)) \%>\% .$harvest_rate

hr_lim <- 
 ssb_curve \%>\% 
 filter(m>blim) \%>\% 
 filter(harvest_rate == max(harvest_rate)) \%>\% 
 .$harvest_rate


f.msy <-
 f.curve \%>\% 
 filter(harvest_rate == hr_msy) \%>\% 
 .$m

f.lim <- 
 f.curve \%>\% 
 filter(harvest_rate == hr_lim) \%>\% 
 .$m

f.pa <- 
 f.lim/1.4

hr_pa <- 
 f.curve \%>\% 
 filter(m < f.pa) \%>\% 
 summarise(hr = max(harvest_rate)) \%>\%
 .$hr


library(patchwork)

yield_curve \%>\% 
 left_join(f.curve \%>\% 
             select(harvest_rate,F=m)) \%>\% 
 ggplot(aes(F,m)) +
 geom_ribbon(aes(ymin=l,ymax=u),fill = 'gold') +  
 geom_line() + 
 geom_vline(xintercept = min(c(f.msy,f.pa))) + 
 geom_vline(xintercept = f.pa,lty=2,col='red') + 
 geom_vline(xintercept = f.lim,lwd=1.1,col='red') +
 ssb_curve \%>\% 
 left_join(f.curve \%>\% 
             select(harvest_rate,F=m)) \%>\% 
 ggplot(aes(F,m)) + 
 geom_ribbon(aes(ymin=l,ymax=u),fill = 'gold') + 
 geom_line() + 
 geom_vline(xintercept = min(c(f.msy,f.pa))) + 
 geom_vline(xintercept = f.pa,lty=2,col='red') + 
 geom_vline(xintercept = f.lim,lwd=1.1,col='red') + 
 geom_hline(yintercept = blim, col = 'red', lwd = 1.1) + 
 geom_hline(yintercept = bpa,col = 'red',lty = 2)
 
 
 ## run prognosis
 
res <- 
 gadget_project_time(num_years = 5, variant_dir = 'PRG') \%>\% 
 gadget_project_stocks(imm.file = 'Modelfiles/cod.imm',mat.file = 'Modelfiles/cod.mat') \%>\% 
 gadget_project_fleets(pre_fleet = 'comm') \%>\% 
 gadget_evaluate(params.out = paste(attr(.,'variant_dir'),'params.pre',sep='/'),
                 params.in = 'WGTS/params.final') \%>\% 
 gadget_project_recruitment(stock = 'codimm', 
                            recruitment = fit$stock.recruitment \%>\% 
                              filter(stock == 'codimm',
                                     year > 1980),
                            method = 'constant',
                            n_replicates = 1,          
                            params.file = paste(attr(.,'variant_dir'),'params.pre',sep='/')) \%>\% 
 gadget_project_ref_point(ref_points = tibble(codmat.blim = 207727665), 
                         params.file = paste(attr(.,'variant_dir'),'params.pre',sep='/')) \%>\% 
 gadget_project_advice(pre_fleet = 'comm',
                       harvest_rate = hr_msy, 
                       params.file = paste(attr(.,'variant_dir'),'params.pre',sep='/'),
                       n_replicates = 1, 
                       advice_cv = 0) \%>\% 
 gadget_project_output(imm.file = 'Modelfiles/cod.imm',mat.file = 'Modelfiles/cod.mat'
                       pre_fleet = 'comm') \%>\% 
 gadget_evaluate(params.in = paste(attr(.,'variant_dir'),'params.pre',sep='/'))  \%>\% 
 {read.printfiles(paste(attr(.,'variant_dir'),'out',sep='/'))} \%>\% 
 set_names(c("catch.F","catch",'rec','ssb')) 
 
 
 }
 
 
}
